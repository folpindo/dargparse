#!/usr/bin/env python


__author__ = 'abdul'

import dargparse
import sys
import traceback
import datetime

from dargparse import dargparse
from datetime import  datetime

# Define your parse dictionary
HELLO_PARSER ={
    "prog": "hello-dargparse",
    "description" : "This is hello world dargparse example",
    "args": [
        {
            "name": "yourName",
            "type" : "positional",
            "help": "Your name",
            "nargs": 1
        },
        {
            "name": "printDate",
            "type" : "optional",
            "help": "print the current date",
            "cmd_arg": [
                "-d",
                "--printDate"
            ],
            "nargs": 0,
            "action": "store_true",
            "default": False
        }

    ]


}



###############################################################################
# MAIN
###############################################################################
def main(args):
# build the parse object
    helloDargParser = dargparse.build_parser(HELLO_PARSER)

    # parse the command line

    parsed_options = helloDargParser.parse_args(args)
    now = datetime.now()
    if parsed_options.printDate:
        print "Hello %s! the time now is %s" % (parsed_options.yourName,now)
    else:
        print "Hello %s!" % (parsed_options.yourName)

###############################################################################
########################                   ####################################
########################     BOOTSTRAP     ####################################
########################                   ####################################
###############################################################################

if __name__ == '__main__':
    try:
        # call main with a sub-list starting skipping the
        # "hello-dargparse" command itself (which is the first arg)
        main(sys.argv[1:])
    except (SystemExit, KeyboardInterrupt) , e:
        if e.code == 0:
            pass
        else:
            raise
    except:
        traceback.print_exc()
